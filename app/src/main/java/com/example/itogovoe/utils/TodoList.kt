package com.example.itogovoe.utils

// TODO: Переделать FilterFragment под sealed class
// TODO: Сделать каждому фрагменту свою ViewModel
// TODO: Перенести всю бизнес логику во вьюмодели. Фрагмент отвечает только за отображение
// TODO: Объединить InfoEntity и CurrencyEntity
// TODO: Настроить CurrencyEntity на @Update, чтобы не множить id`ишники

// TODO: ExchangeFragment
//  1. Попадая после одинарного клика, верхней валютой выставляется
//  та, на которую он нажал, нижней - по следующим приоритетам:
//  первая из любимых не соответствующая верхней или рубль, или доллар

// TODO: HomeFragment
//  3 должен переживать поворот экрана (Для этого задействовать viewModel)
//  4 При нажатии на звёздочку валюта добавляется в избранное (Звёздочка заполняется)
//  5 Пользователь видит валюты отсортированы по последним использованным
//   - логика добавления в избранное
// это можно сделать при помощи ViewModel + добавить в CurrencyUiModel поле isFavourite: Boolean

// фильтрация можно сделать через sealed class
// TODO: FilterFragment
//  1. сделать фильтр по валютам
//  - По нажатию на одну из валют в фильтере будет отображаться только та валюта, где она есть (можно выбрать несколько)
//  - При повторном нажатии выбор данной валюты отменяется (либо сделать кнопку сброса фильтра по валютам)
//  - На экране с историей будет видно, что применён фильтр по валютам

// TODO: Добавить фрагментам вьюмодели и реализовать там бизнес логику (фрагменты должны отвечать только за отображение)
//  фрагменты подписаны на лайв даты и туда всё во вьюмодели скидывается

// TODO: - AnalyticFragment
// TODO: ???????????????????