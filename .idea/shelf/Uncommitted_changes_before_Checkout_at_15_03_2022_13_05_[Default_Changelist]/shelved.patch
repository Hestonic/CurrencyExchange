Index: app/src/main/java/com/example/itogovoe/ui/main/MainViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.itogovoe.ui.main\r\n\r\nimport androidx.lifecycle.MutableLiveData\r\nimport androidx.lifecycle.ViewModel\r\nimport androidx.lifecycle.viewModelScope\r\nimport com.example.itogovoe.data.api.Currency\r\nimport com.example.itogovoe.domain.repository.Repository\r\nimport kotlinx.coroutines.launch\r\nimport retrofit2.Response\r\n\r\nclass MainViewModel(private val repository: Repository) : ViewModel() {\r\n\r\n    // TODO(\"В дальнейшем заменить Response<Currency> на CurrencyUiModel\")\r\n    val myResponce: MutableLiveData<Response<Currency>> = MutableLiveData()\r\n\r\n    fun getCurrency() {\r\n        viewModelScope.launch {\r\n            val responce = repository.getCurrencies()\r\n            myResponce.postValue(responce)\r\n            /*repository.getCurrencies().let {\r\n                myResponce.postValue(CurrencyUiModelMapper.mapDomainModelToUiModel(it))\r\n            }*/\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/itogovoe/ui/main/MainViewModel.kt b/app/src/main/java/com/example/itogovoe/ui/main/MainViewModel.kt
--- a/app/src/main/java/com/example/itogovoe/ui/main/MainViewModel.kt	
+++ b/app/src/main/java/com/example/itogovoe/ui/main/MainViewModel.kt	
@@ -3,7 +3,8 @@
 import androidx.lifecycle.MutableLiveData
 import androidx.lifecycle.ViewModel
 import androidx.lifecycle.viewModelScope
-import com.example.itogovoe.data.api.Currency
+import com.example.itogovoe.data.api.CurrencyR
+import com.example.itogovoe.domain.model.Currencies
 import com.example.itogovoe.domain.repository.Repository
 import kotlinx.coroutines.launch
 import retrofit2.Response
@@ -11,15 +12,12 @@
 class MainViewModel(private val repository: Repository) : ViewModel() {
 
     // TODO("В дальнейшем заменить Response<Currency> на CurrencyUiModel")
-    val myResponce: MutableLiveData<Response<Currency>> = MutableLiveData()
+    val myResponce: MutableLiveData<Currencies> = MutableLiveData()
 
     fun getCurrency() {
         viewModelScope.launch {
             val responce = repository.getCurrencies()
             myResponce.postValue(responce)
-            /*repository.getCurrencies().let {
-                myResponce.postValue(CurrencyUiModelMapper.mapDomainModelToUiModel(it))
-            }*/
         }
     }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/itogovoe/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.itogovoe\r\n\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.lifecycle.ViewModelProvider\r\nimport androidx.navigation.findNavController\r\nimport androidx.navigation.ui.setupWithNavController\r\nimport com.example.itogovoe.data.api.RetrofitInstance.repository\r\nimport com.example.itogovoe.databinding.ActivityMainBinding\r\nimport com.example.itogovoe.ui.main.MainViewModel\r\nimport com.example.itogovoe.ui.main.MainViewModelFactory\r\n\r\nclass MainActivity : AppCompatActivity() {\r\n    private lateinit var binding: ActivityMainBinding\r\n    private lateinit var viewModel: MainViewModel\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        binding = ActivityMainBinding.inflate(layoutInflater)\r\n        val view = binding.root\r\n        setContentView(view)\r\n\r\n        /*supportFragmentManager\r\n            .beginTransaction()\r\n            .add(R.id.fragment_container, HomeFragment())\r\n            .commit()\r\n\r\n        binding.home.setOnClickListener {\r\n            supportFragmentManager\r\n                .beginTransaction()\r\n                .replace(R.id.fragment_container, HomeFragment())\r\n                .commit()\r\n        }\r\n\r\n        binding.history.setOnClickListener {\r\n            supportFragmentManager\r\n                .beginTransaction()\r\n                .replace(R.id.fragment_container, HistoryFragment())\r\n                .commit()\r\n        }\r\n\r\n        binding.analytics.setOnClickListener {\r\n            supportFragmentManager\r\n                .beginTransaction()\r\n                .replace(R.id.fragment_container, AnalyticsFragment())\r\n                .commit()\r\n        }*/\r\n\r\n\r\n        val navController = findNavController(R.id.fragmentContainerView)\r\n        binding.bottomNavigationView.setupWithNavController(navController)\r\n\r\n\r\n        val viewModelFactory = MainViewModelFactory(repository)\r\n        viewModel = ViewModelProvider(this, viewModelFactory)[MainViewModel::class.java]\r\n        viewModel.getCurrency()\r\n        viewModel.myResponce.observe(this) { response ->\r\n            if (response.isSuccessful) {\r\n                Log.d(\"MY_TAG\", response.body()?.success.toString())\r\n                Log.d(\"MY_TAG\", response.body()?.timestamp.toString())\r\n                Log.d(\"MY_TAG\", response.body()?.base.toString())\r\n                Log.d(\"MY_TAG\", response.body()?.date.toString())\r\n                Log.d(\"MY_TAG\", response.body()?.rates.toString())\r\n                Log.d(\"MY_TAG\", response.body().toString())\r\n            } else {\r\n                Log.d(\"MY_TAG\", response.errorBody().toString())\r\n            }\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/itogovoe/MainActivity.kt b/app/src/main/java/com/example/itogovoe/MainActivity.kt
--- a/app/src/main/java/com/example/itogovoe/MainActivity.kt	
+++ b/app/src/main/java/com/example/itogovoe/MainActivity.kt	
@@ -5,12 +5,20 @@
 import androidx.appcompat.app.AppCompatActivity
 import androidx.lifecycle.ViewModelProvider
 import androidx.navigation.findNavController
+import androidx.navigation.ui.AppBarConfiguration
+import androidx.navigation.ui.setupActionBarWithNavController
 import androidx.navigation.ui.setupWithNavController
 import com.example.itogovoe.data.api.RetrofitInstance.repository
 import com.example.itogovoe.databinding.ActivityMainBinding
 import com.example.itogovoe.ui.main.MainViewModel
 import com.example.itogovoe.ui.main.MainViewModelFactory
 
+// TODO: сделать сохранение данных в базу данных
+// TODO:
+// TODO:
+// TODO:
+// TODO:
+
 class MainActivity : AppCompatActivity() {
     private lateinit var binding: ActivityMainBinding
     private lateinit var viewModel: MainViewModel
@@ -21,42 +29,31 @@
         val view = binding.root
         setContentView(view)
 
-        /*supportFragmentManager
-            .beginTransaction()
-            .add(R.id.fragment_container, HomeFragment())
-            .commit()
-
-        binding.home.setOnClickListener {
-            supportFragmentManager
-                .beginTransaction()
-                .replace(R.id.fragment_container, HomeFragment())
-                .commit()
-        }
-
-        binding.history.setOnClickListener {
-            supportFragmentManager
-                .beginTransaction()
-                .replace(R.id.fragment_container, HistoryFragment())
-                .commit()
-        }
-
-        binding.analytics.setOnClickListener {
-            supportFragmentManager
-                .beginTransaction()
-                .replace(R.id.fragment_container, AnalyticsFragment())
-                .commit()
-        }*/
-
 
         val navController = findNavController(R.id.fragmentContainerView)
+        val appBarConfiguration = AppBarConfiguration(
+            setOf(
+                R.id.homeFragment,
+                R.id.historyFragment,
+                R.id.analyticsFragment
+            )
+        )
+        setupActionBarWithNavController(navController, appBarConfiguration)
         binding.bottomNavigationView.setupWithNavController(navController)
 
-
         val viewModelFactory = MainViewModelFactory(repository)
         viewModel = ViewModelProvider(this, viewModelFactory)[MainViewModel::class.java]
         viewModel.getCurrency()
         viewModel.myResponce.observe(this) { response ->
-            if (response.isSuccessful) {
+            if (response != null) {
+                Log.d("MY_TAG", response.date.toString())
+                Log.d("MY_TAG", response.base)
+                Log.d("MY_TAG", response.rates.toString())
+            } else {
+                Log.d("MY_TAG", "response = null")
+            }
+
+            /*if (response.isSuccessful) {
                 Log.d("MY_TAG", response.body()?.success.toString())
                 Log.d("MY_TAG", response.body()?.timestamp.toString())
                 Log.d("MY_TAG", response.body()?.base.toString())
@@ -65,7 +62,7 @@
                 Log.d("MY_TAG", response.body().toString())
             } else {
                 Log.d("MY_TAG", response.errorBody().toString())
-            }
+            }*/
         }
     }
 }
\ No newline at end of file
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\r\n    <string name=\"app_name\">Itogovoe</string>\r\n    <!-- TODO: Remove or change this placeholder text -->\r\n    <string name=\"hello_blank_fragment\">Hello blank fragment</string>\r\n    <string name=\"currency\">USD</string>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
--- a/app/src/main/res/values/strings.xml	
+++ b/app/src/main/res/values/strings.xml	
@@ -1,6 +1,6 @@
 <resources>
     <string name="app_name">Itogovoe</string>
-    <!-- TODO: Remove or change this placeholder text -->
+
     <string name="hello_blank_fragment">Hello blank fragment</string>
     <string name="currency">USD</string>
 </resources>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/Users/danii/AndroidStudioProjects/CurrencyExchanger/app/src/main/res/layout/fragment_analytics.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/Users/danii/AndroidStudioProjects/CurrencyExchanger/app/src/main/res/layout/fragment_history.xml\" value=\"0.22826086956521738\" />\r\n        <entry key=\"..\\:/Users/danii/AndroidStudioProjects/CurrencyExchanger/app/src/main/res/layout/fragment_home.xml\" value=\"0.22826086956521738\" />\r\n        <entry key=\"..\\:/mobdev/CurrencyExchanger/CurrencyExchanger/app/src/main/res/drawable/ic_home.xml\" value=\"0.2265\" />\r\n        <entry key=\"..\\:/mobdev/CurrencyExchanger/CurrencyExchanger/app/src/main/res/drawable/ic_star_rate.xml\" value=\"0.1425\" />\r\n        <entry key=\"..\\:/mobdev/CurrencyExchanger/CurrencyExchanger/app/src/main/res/drawable/round_bg.xml\" value=\"0.1425\" />\r\n        <entry key=\"..\\:/mobdev/CurrencyExchanger/CurrencyExchanger/app/src/main/res/layout/activity_main.xml\" value=\"0.16279069767441862\" />\r\n        <entry key=\"..\\:/mobdev/CurrencyExchanger/CurrencyExchanger/app/src/main/res/layout/fragment_analytics.xml\" value=\"0.2\" />\r\n        <entry key=\"..\\:/mobdev/CurrencyExchanger/CurrencyExchanger/app/src/main/res/layout/fragment_exchange.xml\" value=\"0.2\" />\r\n        <entry key=\"..\\:/mobdev/CurrencyExchanger/CurrencyExchanger/app/src/main/res/layout/fragment_filter.xml\" value=\"0.2\" />\r\n        <entry key=\"..\\:/mobdev/CurrencyExchanger/CurrencyExchanger/app/src/main/res/layout/fragment_history.xml\" value=\"0.2\" />\r\n        <entry key=\"..\\:/mobdev/CurrencyExchanger/CurrencyExchanger/app/src/main/res/layout/fragment_home.xml\" value=\"0.13229166666666667\" />\r\n        <entry key=\"..\\:/mobdev/CurrencyExchanger/CurrencyExchanger/app/src/main/res/layout/item_currency.xml\" value=\"0.2\" />\r\n        <entry key=\"..\\:/mobdev/CurrencyExchanger/CurrencyExchanger/app/src/main/res/menu/bottom_menu.xml\" value=\"0.13229166666666667\" />\r\n        <entry key=\"..\\:/mobdev/itogovoe/itogovoe/app/src/main/res/layout/activity_main.xml\" value=\"0.11302083333333333\" />\r\n        <entry key=\"..\\:/mobdev/reserve/itogovoe/app/src/main/res/layout/activity_main.xml\" value=\"0.2\" />\r\n        <entry key=\"..\\:/mobdev/reserve/itogovoe/app/src/main/res/layout/fragment_main.xml\" value=\"0.1\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"Android Studio default JDK\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	
+++ b/.idea/misc.xml	
@@ -6,6 +6,7 @@
         <entry key="..\:/Users/danii/AndroidStudioProjects/CurrencyExchanger/app/src/main/res/layout/fragment_analytics.xml" value="0.25" />
         <entry key="..\:/Users/danii/AndroidStudioProjects/CurrencyExchanger/app/src/main/res/layout/fragment_history.xml" value="0.22826086956521738" />
         <entry key="..\:/Users/danii/AndroidStudioProjects/CurrencyExchanger/app/src/main/res/layout/fragment_home.xml" value="0.22826086956521738" />
+        <entry key="..\:/Users/danii/AndroidStudioProjects/CurrencyExchanger/app/src/main/res/menu/bottom_menu.xml" value="0.11302083333333333" />
         <entry key="..\:/mobdev/CurrencyExchanger/CurrencyExchanger/app/src/main/res/drawable/ic_home.xml" value="0.2265" />
         <entry key="..\:/mobdev/CurrencyExchanger/CurrencyExchanger/app/src/main/res/drawable/ic_star_rate.xml" value="0.1425" />
         <entry key="..\:/mobdev/CurrencyExchanger/CurrencyExchanger/app/src/main/res/drawable/round_bg.xml" value="0.1425" />
